:toc: macro
toc::[]

= Dataaccess Layer

In this chapter we are going to create the `dataaccess` layer of our application backend.
We create the entities and repositories as well as the corresponding database schema and initial data.

== Create Entities

After you have link:1-setup.asciidoc[setup the project], we are going to create our first app component.
In your application backend create the package `org.example.app.task.dataaccess` (in `src/main/java`).
Inside this package create the following data-model:

image::images/Entities.png[width="100%"]

== Create Repositories

For each entity create a corresponding repository in the same package.

== Database Schema

We have already created SQLs for you with DDL and testdata so you do not have to worry about it.
You can find this in `src/main/resources/db/migration`

== Create JUnits
Now you can create JUnit tests (based on assertJ using `Assertions` class to allow `assertThat` usage).

[source,java]
----
@QuarkusTest
public class TaskItemRepositoryTest extends Assertions {

  @Inject
  private TaskItemRepository taskItemRepository;

  @Test
  public void testFindById() {

    // given
    Long itemId = 11L;

    // when
    TaskItemEntity item = this.taskItemRepository.findById(itemId).get();

    // then
    assertThat(item.getTitle()).isEqualTo("Milk");
  }

}
----

== Links

* https://github.com/devonfw/devon4j/blob/develop/documentation/guide-jpa.asciidoc#java-persistence-api[devon4j:JPA]
* https://github.com/devonfw/devon4j/blob/develop/documentation/guide-repository.asciidoc#spring-data[devon4j:Repository]
* https://github.com/devonfw/devon4j/blob/develop/documentation/guide-jpa-performance.asciidoc#jpa-performance[devon4j:JPA performance]
